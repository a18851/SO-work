Introdução!!!!
Este relatório apresenta a implementação de um interpretador de comandos personalizado em linguagem C para sistemas operativos Linux. O interpretador foi projetado para ler uma sequência de caracteres do utilizador através do terminal, interpretar essa sequência como um comando e os respetivos argumentos, e executá-los no sistema.

O programa foi projetado com uma interface de utilizador simples e intuitiva. Ao ser iniciado, apresenta o símbolo "%" para indicar que está pronto para ler um novo comando. O utilizador pode então inserir comandos, que são executados num novo processo. O interpretador espera até que o comando esteja concluído e, em seguida, informa o utilizador se o comando foi concluído com sucesso ou não, através do código de erro/terminação.

Foram implementadas quatro funções principais, nomeadamente "criar", "apagar", "editar" e "listar". Cada uma destas funções é mapeada para um comando equivalente do Linux. A execução do interpretador pode ser encerrada pelo utilizador através do comando "termina".

Desenvolvimento e Funcionamento do Código!!!!
O código começa por definir algumas constantes para o comprimento máximo do comando e o número máximo de argumentos. Em seguida, entra num ciclo infinito onde lê o comando do utilizador, divide-o em argumentos e cria um novo processo para executar o comando.

O comando é lido do terminal usando a função fgets(). Em seguida, é dividido em argumentos usando a função strtok(), que divide a string em tokens com base nos espaços.

Se o comando inserido for "termina", o interpretador sai do ciclo e termina a execução. Caso contrário, cria um novo processo usando a função fork(). O processo filho substitui o comando "criar", "apagar", "editar" e "listar" pelos comandos equivalentes do Linux e executa o comando usando a função execvp().

Por fim, o processo pai espera que o processo filho termine e informa o utilizador do código de terminação do comando.

Conclusão!!!!
O interpretador de comandos personalizado apresentado neste relatório demonstra como é possível criar um programa em linguagem C que executa comandos do sistema operativo Linux. O programa faz uso eficiente das primitivas de execução genérica de processos disponíveis em C e fornece uma interface de utilizador simples e intuitiva.

Os resultados mostram que o interpretador é capaz de executar comandos e informar o utilizador sobre o seu sucesso ou falha.